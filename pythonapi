import mysql.connector
from flask import Flask, jsonify, request

app = Flask(__name__)

db_config = {
    'host': 'localhost',
    'user': 'root',
    'password': 'nugget',
    'database': 'creditcraft'
}

@app.route('/get_data', methods=['GET'])
def get_data():
    conn = mysql.connector.connect(**db_config)
    cursor = conn.cursor()
    table_name = request.args.get('table_name')
    if table_name == "User":
        cursor.execute("SELECT * FROM User")
        output = cursor.fetchall()
    elif table_name == 'Asset':
        cursor.execute("SELECT * FROM Asset")
        output = cursor.fetchall()
    elif table_name == 'Authentication':
        cursor.execute("SELECT * FROM Authentication")
        output = cursor.fetchall()
    elif table_name == 'BankAccount':
        cursor.execute("SELECT * FROM BankAccount")
        output = cursor.fetchall()
    elif table_name == 'CreditCard':
        cursor.execute("SELECT * FROM CreditCard")
        output = cursor.fetchall()
    elif table_name == 'Transactions':
        cursor.execute("SELECT * FROM Transaction")
        output = cursor.fetchall()
    else:
        return "Invalid table name"
    return output

@app.route('/insert_user', methods=['POST'])
def insert_user():
    data = request.json
    UserID = data.get('UserID')
    Name = data.get('Name')
    DOB = data.get('DOB')
    Age = data.get('Age')

    try:
        conn = mysql.connector.connect(**db_config)
        cursor = conn.cursor()
        query = "Insert Into User(UserID, Name, DOB, Age) VALUES (%s, %s, %s, %s)"
        values = (UserID, Name, DOB, Age)

        cursor.execute(query, values)
        conn.commit()

        cursor.close()
        conn.close()

        return jsonify({'message': 'Data added successfully'}), 201

    except Exception as e:
        return jsonify({'message': 'Failed to add data', 'error': str(e)}), 500

@app.route('/insert_asset', methods=['POST'])
def insert_asset():
    data = request.json
    AssetID = data.get('AssetID')
    UserID = data.get('UserID')
    Type = data.get('Type')
    Name = data.get('Name')
    CurrentValue = data.get('CurrentValue')

    try:
        conn = mysql.connector.connect(**db_config)
        cursor = conn.cursor()
        query = "Insert Into Asset(AssetID, UserID, Type, Name, CurrentValue) VALUES (%s, %s, %s, %s, %s)"
        values = (AssetID, UserID, Type, Name, CurrentValue)

        cursor.execute(query, values)
        conn.commit()

        cursor.close()
        conn.close()

        return jsonify({'message': 'Data added successfully'}), 201

    except Exception as e:
        return jsonify({'message': 'Failed to add data', 'error': str(e)}), 500

@app.route('/insert_authentication', methods=['POST'])
def insert_authentication():
    data = request.json
    LoginID = data.get('LoginID')
    UserID = data.get('UserID')
    Password = data.get('Password')
    Email = data.get('Email')
    Username = data.get('Username')

    try:
        conn = mysql.connector.connect(**db_config)
        cursor = conn.cursor()
        query = "Insert Into Authentication(LoginID, UserID, Password, Email, Username) VALUES (%s, %s, %s, %s, %s)"
        values = (LoginID, UserID, Password, Email, Username)

        cursor.execute(query, values)
        conn.commit()

        cursor.close()
        conn.close()

        return jsonify({'message': 'Data added successfully'}), 201

    except Exception as e:
        return jsonify({'message': 'Failed to add data', 'error': str(e)}), 500

@app.route('/insert_bankaccount', methods=['POST'])
def insert_bankaccount():
    data = request.json
    AccountID = data.get('AccountID')
    UserID = data.get('UserID')
    AccountType = data.get('AccountType')
    AccountNumber = data.get('AccountNumber')
    BankName = data.get('BankName')
    Balance = data.get('Balance')

    try:
        conn = mysql.connector.connect(**db_config)
        cursor = conn.cursor()
        AccountInfo = AccountType + ", " + AccountNumber
        query = "Insert Into BankAccount(AccountID, UserID, AccountInfo, BankName, Balance) VALUES (%s, %s, %s, %s, %s)"
        values = (AccountID, UserID, AccountInfo, BankName, Balance)

        cursor.execute(query, values)
        conn.commit()

        cursor.close()
        conn.close()

        return jsonify({'message': 'Data added successfully'}), 201

    except Exception as e:
        return jsonify({'message': 'Failed to add data', 'error': str(e)}), 500

@app.route('/insert_creditcard', methods=['POST'])
def insert_creditcard():
    data = request.json
    CardID = data.get('CardID')
    UserID = data.get('UserID')
    ExpiryDate = data.get('ExpiryDate')
    CardNumber = data.get('CardNumber')
    CardType = data.get('CardType')
    AvailableCredit = data.get('AvailableCredit')
    CurrentBalance = data.get('CurrentBalance')
    InterestRate = data.get('InterestRate')

    try:
        conn = mysql.connector.connect(**db_config)
        cursor = conn.cursor()
        CardInfo = ExpiryDate + ", " + CardNumber + ", " + CardType
        query = "Insert Into CreditCard(CardID, UserID, CardInfo, AvailableCredit, CurrentBalance, InterestRate) VALUES (%s, %s, %s, %s, %s, %s)"
        values = (CardID, UserID, CardInfo, AvailableCredit, CurrentBalance, InterestRate)

        cursor.execute(query, values)
        conn.commit()

        cursor.close()
        conn.close()

        return jsonify({'message': 'Data added successfully'}), 201

    except Exception as e:
        return jsonify({'message': 'Failed to add data', 'error': str(e)}), 500

@app.route('/insert_transactions', methods=['POST'])
def insert_transactions():
    data = request.json
    TransactionID = data.get('TransactionID')
    UserID = data.get('UserID')
    CardID = data.get('CardID')
    AccountID = data.get('AccountID')
    Merchant = data.get('Merchant')
    Date = data.get('Date')
    Amount = data.get('Amount')
    Category = data.get('Category')

    try:
        conn = mysql.connector.connect(**db_config)
        cursor = conn.cursor()
        query = "Insert Into Transactions(TransactionID, UserID, CardID, AccountID, Merchant, Date, Amount, Category) VALUES (%s, %s, %s, %s, %s, %s, %s, %s)"
        values = (TransactionID, UserID, CardID, AccountID, Merchant, Date, Amount, Category)

        cursor.execute(query, values)
        conn.commit()

        cursor.close()
        conn.close()

        return jsonify({'message': 'Data added successfully'}), 201

    except Exception as e:
        return jsonify({'message': 'Failed to add data', 'error': str(e)}), 500

@app.route('/update_data', methods=['PUT'])
def update_data():

    data = request.json
    table_name = data.get('table_name')
    update_values = data.get('update_values')
    condition = data.get('condition')

    try:
        conn = mysql.connector.connect(**db_config)
        cursor = conn.cursor()
        if table_name == "User":
            query = f"UPDATE User SET "
            for column, value in update_values.items():
                query += f"{column} = '{value}'"
            query += f" WHERE {condition};"
        elif table_name == 'Asset':
            query = f"UPDATE Asset SET "
            for column, value in update_values.items():
                query += f"{column} = '{value}'"
            query += f" WHERE {condition};"
        elif table_name == 'Authentication':
            query = f"UPDATE Authentication SET "
            for column, value in update_values.items():
                query += f"{column} = '{value}'"
            query += f" WHERE {condition};"
        elif table_name == 'BankAccount':
            query = f"UPDATE BankAccount SET "
            for column, value in update_values.items():
                query += f"{column} = '{value}'"
            query += f" WHERE {condition};"
        elif table_name == 'CreditCard':
            query = f"UPDATE CreditCard SET "
            for column, value in update_values.items():
                query += f"{column} = '{value}'"
            query += f" WHERE {condition};"
        elif table_name == 'Transactions':
            query = f"UPDATE Transactions SET "
            for column, value in update_values.items():
                query += f"{column} = '{value}'"
            query += f" WHERE {condition};"
        else:
            return "Invalid table name"

        cursor.execute(query)
        conn.commit()

        cursor.close()
        conn.close()

        return jsonify({'message': 'Data updated successfully'}), 201

    except Exception as e:
        return jsonify({'message': 'Failed to update data', 'error': str(e)}), 500

@app.route('/delete_data', methods=['DELETE'])
def delete_data():
    data = request.json
    table_name = data.get('table_name')
    condition = data.get('condition')

    try:
        conn = mysql.connector.connect(**db_config)
        cursor = conn.cursor()
        if table_name == "User":
            query = f"DELETE FROM User WHERE {condition};"
        elif table_name == 'Asset':
            query = f"DELETE FROM Asset WHERE {condition};"
        elif table_name == 'Authentication':
            query = f"DELETE FROM Authentication WHERE {condition};"
        elif table_name == 'BankAccount':
            query = f"DELETE FROM BankAccount WHERE {condition};"
        elif table_name == 'CreditCard':
            query = f"DELETE FROM CreditCard WHERE {condition};"
        elif table_name == 'Transactions':
            query = f"DELETE FROM Transactions WHERE {condition};"
        else:
            return "Invalid table name"

        cursor.execute(query)
        conn.commit()

        cursor.close()
        conn.close()

        return jsonify({'message': 'Data deleted successfully'}), 201

    except Exception as e:
        return jsonify({'message': 'Failed to delete data', 'error': str(e)}), 500

@app.route('/')
def test_connection():
    conn = mysql.connector.connect(**db_config)
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM User")
    result = cursor.fetchone()
    return f"Connection to MySQL successful. Result: {result[0]}"

if __name__ == '__main__':
    app.run(debug=True)


